{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAkCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEtBG,EAAO,CAAEJ,WAAUC,YAElBA,MAzCPJ,EAAAY,OAAOC,KAAK,CAACV,SAAU,cAEVW,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAA0BC,GACxBA,EAAMC,iBACN,IAAgCC,EAAAF,EAAMG,cAAcC,SAA5CC,EAAwBH,EAAxBG,OAAQC,EAAgBJ,EAAhBf,MAAOoB,EAASL,EAATK,KACjBC,EAAeC,SAASJ,EAAOK,OACjCC,EAAcF,SAASH,EAAMI,OAC3BE,EAAaH,SAASF,EAAKG,OAEjC,GAAIF,EAAe,GAAKG,EAAc,GAAKC,EAAa,EACtD,OAAO7B,EAAAY,OAAOkB,QAAS,wCAGzB,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAcM,GAAK,EACrC7B,EAAcuB,EAAcG,GAC3BI,MAAK,SAAAC,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MACnBJ,EAAAY,OAAOsB,QAAQ,qBAAoCC,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,UAE1DgC,OAAM,SAAAH,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MAClBJ,EAAAY,OAAOkB,QAAQ,oBAAmCK,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,UAExDwB,GAAeC,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nNotify.init({position: 'right-top'})\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', handleSubmitForm);\n\nfunction handleSubmitForm(event) {\n  event.preventDefault();\n  const { amount, delay, step } = event.currentTarget.elements;\n  const amountNumber = parseInt(amount.value);\n  let delayNumber = parseInt(delay.value);\n  const stepNumber = parseInt(step.value);\n\n  if (amountNumber < 0 || delayNumber < 0 || stepNumber < 0) {\n    return Notify.failure(`Please enter a number greater than 0`);\n  }\n \n  for (let i = 0; i < amountNumber; i += 1){\n    createPromise(amountNumber, delayNumber)\n    .then(({ position, delay }) => {\n    Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n  });\n    delayNumber += stepNumber;\n  };\n\n};\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n    }, delay)\n      \n  })\n  \n};\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","Notify","init","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","amount","delay1","step","amountNumber","parseInt","value","delayNumber","stepNumber","failure","i","then","param","success","concat","catch"],"version":3,"file":"03-promises.97bcaa0b.js.map"}