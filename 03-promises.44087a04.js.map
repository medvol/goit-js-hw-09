{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGAD,EAAAE,OAAOC,KAAK,CAACC,SAAU,cA2BvB,SAASC,EAAcD,EAAUE,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEJ,E,MAAUE,IAEtBG,EAAO,C,SAAEL,E,MAAUE,MAElBA,MAnCMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAA0BC,GACxBA,EAAMC,iBACN,MAAMC,OAAEA,EAAQb,MAAAc,EAAKC,KAAEA,GAASJ,EAAMK,cAAcC,SAC9CC,EAAeC,SAASN,EAAOO,OACrC,IAAIC,EAAcF,SAASL,EAAMM,OACjC,MAAME,EAAaH,SAASJ,EAAKK,OAEjC,IAAK,IAAIG,EAAI,EAAGA,EAAIL,EAAcK,GAAK,EACrCxB,EAAcmB,EAAcG,GAC3BG,MAAK,EAAC1B,SAAEA,EAAQE,MAAEA,MACnBN,EAAAE,OAAO6B,QAAQ,qBAAqB3B,QAAeE,UAEpD0B,OAAM,EAAC5B,SAAEA,EAAQE,MAAEA,MAClBN,EAAAE,OAAO+B,QAAQ,oBAAoB7B,QAAeE,UAElDqB,GAAeC","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nNotify.init({position: 'right-top'})\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', handleSubmitForm);\n\nfunction handleSubmitForm(event) {\n  event.preventDefault();\n  const { amount, delay, step } = event.currentTarget.elements;\n  const amountNumber = parseInt(amount.value);\n  let delayNumber = parseInt(delay.value);\n  const stepNumber = parseInt(step.value);\n \n  for (let i = 0; i < amountNumber; i += 1){\n    createPromise(amountNumber, delayNumber)\n    .then(({ position, delay }) => {\n    Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n  });\n    delayNumber += stepNumber;\n  };\n\n};\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n    }, delay)\n      \n  })\n  \n};\n\n"],"names":["$iQIUW","parcelRequire","Notify","init","position","$47d4ff9957288465$var$createPromise","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","amount","delay1","step","currentTarget","elements","amountNumber","parseInt","value","delayNumber","stepNumber","i","then","success","catch","failure"],"version":3,"file":"03-promises.44087a04.js.map"}